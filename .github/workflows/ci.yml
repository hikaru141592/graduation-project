name: CI

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache vendor/bundle
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Ensure bundle dir
        run: mkdir -p vendor/bundle

      - name: Install dependencies
        run: |
          docker compose run --rm -v ${{ github.workspace }}/vendor/bundle:/usr/local/bundle web bundle install

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: docker compose run --rm -v ${{ github.workspace }}/vendor/bundle:/usr/local/bundle web bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache vendor/bundle
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Ensure bundle dir
        run: mkdir -p vendor/bundle

      - name: Install dependencies
        run: |
          docker compose run --rm -v ${{ github.workspace }}/vendor/bundle:/usr/local/bundle web bundle install

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: docker compose run --rm -v ${{ github.workspace }}/vendor/bundle:/usr/local/bundle web bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache vendor/bundle
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Ensure bundle dir
        run: mkdir -p vendor/bundle

      - name: Install dependencies
        run: |
          docker compose run --rm -v ${{ github.workspace }}/vendor/bundle:/usr/local/bundle web bundle install

      - name: Lint code for consistent style
        run: docker compose run --rm -v ${{ github.workspace }}/vendor/bundle:/usr/local/bundle web bin/rubocop -f github

  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache vendor/bundle
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Ensure bundle dir
        run: mkdir -p vendor/bundle

      - name: Start DB container
        run: |
          docker compose up -d db
          docker compose exec db pg_isready -U hikaru -t 30

      - name: Debug DB status
        run: |
          docker compose exec db netstat -plnt
          docker compose logs db

      - name: Install deps, set up DB, run RSpec (inside container)
        run: |
          docker compose run --rm \
            -v ${{ github.workspace }}/vendor/bundle:/usr/local/bundle \
            web bash -c '
              bundle install --jobs 4 --retry 3 &&
              bundle exec rails db:create db:migrate &&
              bundle exec rspec
            '
